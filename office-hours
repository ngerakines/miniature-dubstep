/**
 *  Gerakines Office Hours
 *
 *  Author: nick@gerakines.net
 *  Date: 2013-12-28
 */
preferences {
	section("When a presence sensor arrives or departs this location...") {
		input "presence", "capability.presenceSensor", title: "Which sensor?"
	}
	section("Turn on when there's movement..."){
		input "motion1", "capability.motionSensor", title: "Where?"
	}
	section("And off when there's been no movement for..."){
		input "minutes1", "number", title: "Minutes?"
	}
	section("Turn on/off light(s)..."){
		input "switches", "capability.switch", multiple: true
	}
}

def installed() {
	log.debug "Installed with settings: ${settings}"

	initialize()
}

def updated() {
	log.debug "Updated with settings: ${settings}"

	unsubscribe()
	unschedule()
	initialize()
}

def initialize() {
	subscribe(presence, "presence", presenceHandler)
	subscribe(motion1, "motion", motionHandler)
	schedule("0 * * * * ?", "scheduleCheck")

	state.present = presence.currentState("presence")
}

def presenceHandler(evt) {
	if (evt.value == "present") {
		state.present = true
		switches.on()
	} else if (evt.value == "not present") {
		switches.off()
		state.present = false
	}
}

def motionHandler(evt) {
	if (evt.value == "active") {
		if (state.present == true) {
			switches.each {
				if (it.currentState("switch").value == "off") {
					log.debug "turning ${it.label ?: it.name} on."
					it.on()
				}
			}
			state.inactiveAt = null
		}
	} else if (evt.value == "inactive" && !state.inactiveAt) {
		state.inactiveAt = now()
	}
}

def scheduleCheck() {
	if (presence.currentState("presence").value == "present") {
		state.present = true
	}
	if (state.inactiveAt) {
		def elapsed = now() - state.inactiveAt
		def threshold = 1000 * 60 * minutes1
		if (elapsed >= threshold) {
			log.debug "turning off lights"
			switches.off()
			state.inactiveAt = null
		}
	}
}
